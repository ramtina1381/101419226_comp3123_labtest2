{"ast":null,"code":"var _jsxFileName = \"/Users/pang/Desktop/COMP3123-FullStack/101445976_comp3123_labtest2/101445976__comp3123_labtest2/src/weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\"; // External CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Mumbai\");\n  const [searchCity, setSearchCity] = useState(\"\"); // Store the city to search for\n  const [citySuggestions, setCitySuggestions] = useState([]); // List of city suggestions\n  const [showSuggestions, setShowSuggestions] = useState(false); // Toggle suggestions list\n  const API_KEY = \"461c465af010968d6dbc72a748b1a651\";\n\n  // Fetch the weather data based on the city\n  const fetchWeather = async city => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n    }\n  };\n\n  // Handle form submission for city search\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (searchCity) {\n      setCity(searchCity); // Update city state\n      setShowSuggestions(false); // Hide suggestions after selecting city\n      fetchWeather(searchCity); // Fetch weather for the selected city\n    }\n  };\n\n  // Handle search input change to fetch city suggestions\n  const handleCityChange = async e => {\n    setSearchCity(e.target.value); // Update the city name while typing\n    if (e.target.value) {\n      setShowSuggestions(true); // Show suggestions when user starts typing\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/find?q=${e.target.value}&appid=${API_KEY}`);\n      setCitySuggestions(response.data.list); // Update suggestions list\n    } else {\n      setShowSuggestions(false); // Hide suggestions when input is empty\n    }\n  };\n\n  // Fetch weather data when city changes\n  useEffect(() => {\n    fetchWeather(city);\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: new Date().toLocaleDateString(\"en-US\", {\n            weekday: \"long\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date().toLocaleDateString(\"en-GB\", {\n            day: '2-digit',\n            month: 'short',\n            year: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [weatherData.city.name, \" - \", weatherData.city.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${weatherData.list[0].weather[0].icon}@2x.png`,\n            alt: weatherData.list[0].weather[0].description,\n            className: \"weather-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [Math.round(weatherData.list[0].main.temp - 273.15), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weatherData.list[0].weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSearch,\n            className: \"search-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"city\",\n              placeholder: \"Enter city\",\n              className: \"search-input\",\n              value: searchCity,\n              onChange: handleCityChange // Handle input change for suggestions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"search-button\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), showSuggestions && citySuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestions-list\",\n            children: citySuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion-item\",\n              onClick: () => {\n                setSearchCity(suggestion.name); // Set the selected city\n                setCity(suggestion.name); // Fetch weather for selected city\n                setShowSuggestions(false); // Hide suggestions\n              },\n              children: [suggestion.name, \", \", suggestion.sys.country]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this), weatherData.list.slice(0, 5).map((forecast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: new Date(forecast.dt * 1000).toLocaleDateString(\"en-US\", {\n                weekday: \"short\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [Math.round(forecast.main.temp - 273.15), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`,\n              alt: forecast.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"UV Index: 8 (Very High)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humidity: \", weatherData.list[0].main.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Speed: \", weatherData.list[0].wind.speed, \" km/h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Population:\", \" \", Intl.NumberFormat().format(weatherData.city.population || 0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"8kboCNFApLPwKVc6HgWR1MKdYEg=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Weather","_s","weatherData","setWeatherData","city","setCity","searchCity","setSearchCity","citySuggestions","setCitySuggestions","showSuggestions","setShowSuggestions","API_KEY","fetchWeather","response","get","data","error","console","handleSearch","e","preventDefault","handleCityChange","target","value","list","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleDateString","weekday","day","month","year","name","country","src","weather","icon","alt","description","Math","round","main","temp","onSubmit","type","placeholder","onChange","length","map","suggestion","index","onClick","sys","slice","forecast","dt","humidity","wind","speed","Intl","NumberFormat","format","population","_c","$RefreshReg$"],"sources":["/Users/pang/Desktop/COMP3123-FullStack/101445976_comp3123_labtest2/101445976__comp3123_labtest2/src/weather.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\"; // External CSS for styling\n\nconst Weather = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Mumbai\");\n  const [searchCity, setSearchCity] = useState(\"\"); // Store the city to search for\n  const [citySuggestions, setCitySuggestions] = useState([]); // List of city suggestions\n  const [showSuggestions, setShowSuggestions] = useState(false); // Toggle suggestions list\n  const API_KEY = \"461c465af010968d6dbc72a748b1a651\";\n\n  // Fetch the weather data based on the city\n  const fetchWeather = async (city) => {\n    try {\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}`\n      );\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n    }\n  };\n\n  // Handle form submission for city search\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (searchCity) {\n      setCity(searchCity); // Update city state\n      setShowSuggestions(false); // Hide suggestions after selecting city\n      fetchWeather(searchCity); // Fetch weather for the selected city\n    }\n  };\n\n  // Handle search input change to fetch city suggestions\n  const handleCityChange = async (e) => {\n    setSearchCity(e.target.value); // Update the city name while typing\n    if (e.target.value) {\n      setShowSuggestions(true); // Show suggestions when user starts typing\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/find?q=${e.target.value}&appid=${API_KEY}`\n      );\n      setCitySuggestions(response.data.list); // Update suggestions list\n    } else {\n      setShowSuggestions(false); // Hide suggestions when input is empty\n    }\n  };\n\n  // Fetch weather data when city changes\n  useEffect(() => {\n    fetchWeather(city);\n  }, [city]);\n\n  return (\n    <div className=\"weather-app\">\n      <h1>Weather App</h1>\n\n      {weatherData && (\n        <div className=\"weather-container\">\n\n          {/* Left Panel */}\n          <div className=\"left-panel\">\n            <h2>{new Date().toLocaleDateString(\"en-US\", { weekday: \"long\" })}</h2>\n            <p>{new Date().toLocaleDateString(\"en-GB\", {\n              day: '2-digit',\n              month: 'short',\n              year: 'numeric'\n            })}</p>\n            <h3>\n              {weatherData.city.name} - {weatherData.city.country}\n            </h3>\n\n\n            <div className=\"temperature\">\n              <img\n                src={`https://openweathermap.org/img/wn/${weatherData.list[0].weather[0].icon}@2x.png`}\n                alt={weatherData.list[0].weather[0].description}\n                className=\"weather-icon\"\n              />\n              <h1>{Math.round(weatherData.list[0].main.temp - 273.15)}°C</h1>\n            </div>\n            <p>{weatherData.list[0].weather[0].description}</p>\n          </div>\n\n\n\n\n          {/* Right Panel */}\n          <div className=\"right-panel\">\n            <div className=\"forecast\">\n          \n          \n            <form onSubmit={handleSearch} className=\"search-form\">\n           <input\n             type=\"text\"\n                 name=\"city\"\n                placeholder=\"Enter city\"\n                 className=\"search-input\"\n                value={searchCity}\n          onChange={handleCityChange} // Handle input change for suggestions\n        />\n        <button type=\"submit\" className=\"search-button\">\n          Search\n        </button>\n      </form>\n\n      {/* Show city suggestions when available */}\n      {showSuggestions && citySuggestions.length > 0 && (\n        <div className=\"suggestions-list\">\n          {citySuggestions.map((suggestion, index) => (\n            <div\n              key={index}\n              className=\"suggestion-item\"\n              onClick={() => {\n                setSearchCity(suggestion.name); // Set the selected city\n                setCity(suggestion.name); // Fetch weather for selected city\n                setShowSuggestions(false); // Hide suggestions\n              }}\n            >\n              {suggestion.name}, {suggestion.sys.country}\n            </div>\n          ))}\n        </div>\n      )}\n\n              {weatherData.list.slice(0, 5).map((forecast, index) => (\n                <div key={index} className=\"forecast-item\">\n                  <p>\n                    {new Date(forecast.dt * 1000).toLocaleDateString(\"en-US\", {\n                      weekday: \"short\",\n                    })}\n                  </p>\n                  <p>{Math.round(forecast.main.temp - 273.15)}°C</p>\n                  <img\n                    src={`https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`}\n                    alt={forecast.weather[0].description}\n                  />\n                </div>\n              ))}\n            </div>\n            <div className=\"details\">\n              <p>UV Index: 8 (Very High)</p>\n              <p>Humidity: {weatherData.list[0].main.humidity}%</p>\n              <p>Wind Speed: {weatherData.list[0].wind.speed} km/h</p>\n              <p>\n                Population:{\" \"}\n                {Intl.NumberFormat().format(weatherData.city.population || 0)}\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}